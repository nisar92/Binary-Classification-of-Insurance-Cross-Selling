{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":73291,"databundleVersionId":8930475,"sourceType":"competition"}],"dockerImageVersionId":30732,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom matplotlib.ticker import MaxNLocator\nimport seaborn as sns\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split,StratifiedShuffleSplit\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom imblearn import base\nfrom imblearn.ensemble import BalancedBaggingClassifier \nfrom xgboost import XGBClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.decomposition import PCA\nfrom sklearn.metrics import accuracy_score,roc_auc_score\nfrom sklearn.metrics import confusion_matrix\nfrom sklearn.metrics import classification_report\n%matplotlib inline\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-07-23T05:12:48.917684Z","iopub.execute_input":"2024-07-23T05:12:48.918089Z","iopub.status.idle":"2024-07-23T05:12:48.936351Z","shell.execute_reply.started":"2024-07-23T05:12:48.918057Z","shell.execute_reply":"2024-07-23T05:12:48.935024Z"},"trusted":true},"execution_count":12,"outputs":[{"name":"stdout","text":"/kaggle/input/playground-series-s4e7/sample_submission.csv\n/kaggle/input/playground-series-s4e7/train.csv\n/kaggle/input/playground-series-s4e7/test.csv\n","output_type":"stream"}]},{"cell_type":"code","source":"train = pd.read_csv(\"/kaggle/input/playground-series-s4e7/train.csv\",index_col='id')\ntest = pd.read_csv(\"/kaggle/input/playground-series-s4e7/test.csv\",index_col='id')\nsample = pd.read_csv(\"/kaggle/input/playground-series-s4e7/sample_submission.csv\")","metadata":{"execution":{"iopub.status.busy":"2024-07-23T05:12:48.938770Z","iopub.execute_input":"2024-07-23T05:12:48.939633Z","iopub.status.idle":"2024-07-23T05:13:15.796072Z","shell.execute_reply.started":"2024-07-23T05:12:48.939593Z","shell.execute_reply":"2024-07-23T05:13:15.794928Z"},"trusted":true},"execution_count":13,"outputs":[]},{"cell_type":"code","source":"def converting_datatypes(df):\n    df = df.copy()\n    try:\n        # Converting data types\n        df['Gender'] = df['Gender'].astype('category')\n        df['Vehicle_Age'] = df['Vehicle_Age'].astype('category')\n        df['Vehicle_Damage'] = df['Vehicle_Damage'].astype('category')\n        df['Age'] = df['Age'].astype('int8')\n        df['Driving_License'] = df['Driving_License'].astype('int8')\n        df['Region_Code'] = df['Region_Code'].astype('int8')\n        df['Previously_Insured'] = df['Previously_Insured'].astype('int8')\n        df['Annual_Premium'] = df['Annual_Premium'].astype('int32')\n        df['Policy_Sales_Channel'] = df['Policy_Sales_Channel'].astype('int16')\n        df['Vintage'] = df['Vintage'].astype('int16')\n        df['Response'] = df['Response'].astype('int8')\n        print(df.info(memory_usage='deep'))\n    except KeyError as e:\n        print(f\"Error: {e} not found in DataFrame\")\n    except Exception as e:\n        print(f\"An error occurred: {e}\")\n    return df","metadata":{"execution":{"iopub.status.busy":"2024-07-23T05:13:15.797525Z","iopub.execute_input":"2024-07-23T05:13:15.797855Z","iopub.status.idle":"2024-07-23T05:13:15.806119Z","shell.execute_reply.started":"2024-07-23T05:13:15.797828Z","shell.execute_reply":"2024-07-23T05:13:15.805111Z"},"trusted":true},"execution_count":14,"outputs":[]},{"cell_type":"code","source":"train = converting_datatypes(train)\ntest = converting_datatypes(test)","metadata":{"execution":{"iopub.status.busy":"2024-07-23T05:13:15.807832Z","iopub.execute_input":"2024-07-23T05:13:15.808249Z","iopub.status.idle":"2024-07-23T05:13:22.247866Z","shell.execute_reply.started":"2024-07-23T05:13:15.808212Z","shell.execute_reply":"2024-07-23T05:13:22.246837Z"},"trusted":true},"execution_count":15,"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nIndex: 11504798 entries, 0 to 11504797\nData columns (total 11 columns):\n #   Column                Dtype   \n---  ------                -----   \n 0   Gender                category\n 1   Age                   int8    \n 2   Driving_License       int8    \n 3   Region_Code           int8    \n 4   Previously_Insured    int8    \n 5   Vehicle_Age           category\n 6   Vehicle_Damage        category\n 7   Annual_Premium        int32   \n 8   Policy_Sales_Channel  int16   \n 9   Vintage               int16   \n 10  Response              int8    \ndtypes: category(3), int16(2), int32(1), int8(5)\nmemory usage: 263.3 MB\nNone\nError: 'Response' not found in DataFrame\n","output_type":"stream"}]},{"cell_type":"code","source":"train.head()","metadata":{"execution":{"iopub.status.busy":"2024-07-23T05:13:22.250327Z","iopub.execute_input":"2024-07-23T05:13:22.250681Z","iopub.status.idle":"2024-07-23T05:13:22.268984Z","shell.execute_reply.started":"2024-07-23T05:13:22.250653Z","shell.execute_reply":"2024-07-23T05:13:22.267962Z"},"trusted":true},"execution_count":16,"outputs":[{"execution_count":16,"output_type":"execute_result","data":{"text/plain":"    Gender  Age  Driving_License  Region_Code  Previously_Insured Vehicle_Age  \\\nid                                                                              \n0     Male   21                1           35                   0    1-2 Year   \n1     Male   43                1           28                   0   > 2 Years   \n2   Female   25                1           14                   1    < 1 Year   \n3   Female   35                1            1                   0    1-2 Year   \n4   Female   36                1           15                   1    1-2 Year   \n\n   Vehicle_Damage  Annual_Premium  Policy_Sales_Channel  Vintage  Response  \nid                                                                          \n0             Yes           65101                   124      187         0  \n1             Yes           58911                    26      288         1  \n2              No           38043                   152      254         0  \n3             Yes            2630                   156       76         0  \n4              No           31951                   152      294         0  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Gender</th>\n      <th>Age</th>\n      <th>Driving_License</th>\n      <th>Region_Code</th>\n      <th>Previously_Insured</th>\n      <th>Vehicle_Age</th>\n      <th>Vehicle_Damage</th>\n      <th>Annual_Premium</th>\n      <th>Policy_Sales_Channel</th>\n      <th>Vintage</th>\n      <th>Response</th>\n    </tr>\n    <tr>\n      <th>id</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Male</td>\n      <td>21</td>\n      <td>1</td>\n      <td>35</td>\n      <td>0</td>\n      <td>1-2 Year</td>\n      <td>Yes</td>\n      <td>65101</td>\n      <td>124</td>\n      <td>187</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Male</td>\n      <td>43</td>\n      <td>1</td>\n      <td>28</td>\n      <td>0</td>\n      <td>&gt; 2 Years</td>\n      <td>Yes</td>\n      <td>58911</td>\n      <td>26</td>\n      <td>288</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Female</td>\n      <td>25</td>\n      <td>1</td>\n      <td>14</td>\n      <td>1</td>\n      <td>&lt; 1 Year</td>\n      <td>No</td>\n      <td>38043</td>\n      <td>152</td>\n      <td>254</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Female</td>\n      <td>35</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1-2 Year</td>\n      <td>Yes</td>\n      <td>2630</td>\n      <td>156</td>\n      <td>76</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Female</td>\n      <td>36</td>\n      <td>1</td>\n      <td>15</td>\n      <td>1</td>\n      <td>1-2 Year</td>\n      <td>No</td>\n      <td>31951</td>\n      <td>152</td>\n      <td>294</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"train.shape","metadata":{"execution":{"iopub.status.busy":"2024-07-23T05:13:22.270255Z","iopub.execute_input":"2024-07-23T05:13:22.270615Z","iopub.status.idle":"2024-07-23T05:13:22.280298Z","shell.execute_reply.started":"2024-07-23T05:13:22.270588Z","shell.execute_reply":"2024-07-23T05:13:22.279274Z"},"trusted":true},"execution_count":17,"outputs":[{"execution_count":17,"output_type":"execute_result","data":{"text/plain":"(11504798, 11)"},"metadata":{}}]},{"cell_type":"code","source":"train.Response.value_counts(normalize=True)","metadata":{"execution":{"iopub.status.busy":"2024-07-23T05:13:22.281642Z","iopub.execute_input":"2024-07-23T05:13:22.281961Z","iopub.status.idle":"2024-07-23T05:13:22.357956Z","shell.execute_reply.started":"2024-07-23T05:13:22.281931Z","shell.execute_reply":"2024-07-23T05:13:22.356808Z"},"trusted":true},"execution_count":18,"outputs":[{"execution_count":18,"output_type":"execute_result","data":{"text/plain":"Response\n0    0.877003\n1    0.122997\nName: proportion, dtype: float64"},"metadata":{}}]},{"cell_type":"code","source":"def discover(df, target=''):\n\n    #Creating Seris with Feature Types, removing the target feature\n    if target != '':\n        df1 = df.drop(target, axis = 1, inplace = False)\n    else:\n        df1 = df\n\n    #listing feature type\n    feature_type = []\n    for j in range(len(df1.columns)):\n        if df1[df1.columns[j]].nunique()==2:\n            feature_type.append('Binary')\n        elif df1[df1.columns[j]].dtypes != 'O' and df1[df1.columns[j]].nunique()>10:\n            feature_type.append('Numerical')\n        elif df1[df1.columns[j]].dtypes != 'O' and df1[df1.columns[j]].nunique()<10:\n            feature_type.append('Ordinal')\n        elif df1[df1.columns[j]].nunique()<10:\n            feature_type.append('Ordinal')\n        else:\n            feature_type.append('Identifier')\n\n    #listing feature content\n    features_content = []\n    for i in range(len(df1.columns)):\n        if df1[df1.columns[i]].nunique()<10:\n            features_content.append(df1[df1.columns[i]].unique())\n        else:\n            features_content.append('n = ' + str(df1[df1.columns[i]].nunique()))\n\n    #listing empty cells feature type\n    num_of_empty = []\n    for k in df1.columns:\n        num_of_empty.append(df1[k].isnull().sum())\n\n    #listing empty cells ratio feature type\n    ratio_of_empty = []\n    for k in df1.columns:\n        ratio_of_empty.append(round(100*df1[k].isnull().sum()/df1[k].isnull().count(),2))\n\n    discovered = pd.DataFrame({'Features': df1.columns,\n                               'Features Content': features_content,\n                               'Feature Type': feature_type,\n                               'Empty Cells': num_of_empty,\n                               '% Empty': ratio_of_empty\n                             })\n    discovered = discovered.sort_values(['Feature Type','Empty Cells'],ascending=False)\n    print(\"Shape of Dataset: \",df.shape)\n    return discovered","metadata":{"execution":{"iopub.status.busy":"2024-07-23T05:13:22.359256Z","iopub.execute_input":"2024-07-23T05:13:22.359627Z","iopub.status.idle":"2024-07-23T05:13:22.374105Z","shell.execute_reply.started":"2024-07-23T05:13:22.359600Z","shell.execute_reply":"2024-07-23T05:13:22.373033Z"},"trusted":true},"execution_count":19,"outputs":[]},{"cell_type":"code","source":"discover(train)","metadata":{"execution":{"iopub.status.busy":"2024-07-23T05:13:22.375584Z","iopub.execute_input":"2024-07-23T05:13:22.375916Z","iopub.status.idle":"2024-07-23T05:13:25.019633Z","shell.execute_reply.started":"2024-07-23T05:13:22.375889Z","shell.execute_reply":"2024-07-23T05:13:25.018629Z"},"trusted":true},"execution_count":20,"outputs":[{"name":"stdout","text":"Shape of Dataset:  (11504798, 11)\n","output_type":"stream"},{"execution_count":20,"output_type":"execute_result","data":{"text/plain":"                Features                                   Features Content  \\\n5            Vehicle_Age  ['1-2 Year', '> 2 Years', '< 1 Year']\nCategori...   \n1                    Age                                             n = 66   \n3            Region_Code                                             n = 53   \n7         Annual_Premium                                          n = 51728   \n8   Policy_Sales_Channel                                            n = 152   \n9                Vintage                                            n = 290   \n0                 Gender  ['Male', 'Female']\nCategories (2, object): ['F...   \n2        Driving_License                                             [1, 0]   \n4     Previously_Insured                                             [0, 1]   \n6         Vehicle_Damage  ['Yes', 'No']\nCategories (2, object): ['No', '...   \n10              Response                                             [0, 1]   \n\n   Feature Type  Empty Cells  % Empty  \n5       Ordinal            0      0.0  \n1     Numerical            0      0.0  \n3     Numerical            0      0.0  \n7     Numerical            0      0.0  \n8     Numerical            0      0.0  \n9     Numerical            0      0.0  \n0        Binary            0      0.0  \n2        Binary            0      0.0  \n4        Binary            0      0.0  \n6        Binary            0      0.0  \n10       Binary            0      0.0  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Features</th>\n      <th>Features Content</th>\n      <th>Feature Type</th>\n      <th>Empty Cells</th>\n      <th>% Empty</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>5</th>\n      <td>Vehicle_Age</td>\n      <td>['1-2 Year', '&gt; 2 Years', '&lt; 1 Year']\nCategori...</td>\n      <td>Ordinal</td>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Age</td>\n      <td>n = 66</td>\n      <td>Numerical</td>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Region_Code</td>\n      <td>n = 53</td>\n      <td>Numerical</td>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>Annual_Premium</td>\n      <td>n = 51728</td>\n      <td>Numerical</td>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>Policy_Sales_Channel</td>\n      <td>n = 152</td>\n      <td>Numerical</td>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>Vintage</td>\n      <td>n = 290</td>\n      <td>Numerical</td>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>0</th>\n      <td>Gender</td>\n      <td>['Male', 'Female']\nCategories (2, object): ['F...</td>\n      <td>Binary</td>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Driving_License</td>\n      <td>[1, 0]</td>\n      <td>Binary</td>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Previously_Insured</td>\n      <td>[0, 1]</td>\n      <td>Binary</td>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>Vehicle_Damage</td>\n      <td>['Yes', 'No']\nCategories (2, object): ['No', '...</td>\n      <td>Binary</td>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>Response</td>\n      <td>[0, 1]</td>\n      <td>Binary</td>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"df_cat = train.select_dtypes(\"category\")","metadata":{"execution":{"iopub.status.busy":"2024-07-23T05:13:25.020932Z","iopub.execute_input":"2024-07-23T05:13:25.021288Z","iopub.status.idle":"2024-07-23T05:13:25.032986Z","shell.execute_reply.started":"2024-07-23T05:13:25.021260Z","shell.execute_reply":"2024-07-23T05:13:25.031853Z"},"trusted":true},"execution_count":21,"outputs":[]},{"cell_type":"code","source":"df_cat['Gender']=pd.get_dummies(df_cat.Gender,drop_first=True,dtype=int)\ndf_cat['Vehicle_Damage']=pd.get_dummies(df_cat.Vehicle_Damage,drop_first=True,dtype=int)","metadata":{"execution":{"iopub.status.busy":"2024-07-23T05:13:25.034654Z","iopub.execute_input":"2024-07-23T05:13:25.035063Z","iopub.status.idle":"2024-07-23T05:13:25.693724Z","shell.execute_reply.started":"2024-07-23T05:13:25.035026Z","shell.execute_reply":"2024-07-23T05:13:25.692500Z"},"trusted":true},"execution_count":22,"outputs":[]},{"cell_type":"code","source":"df_cat","metadata":{"execution":{"iopub.status.busy":"2024-07-23T05:13:25.694959Z","iopub.execute_input":"2024-07-23T05:13:25.695281Z","iopub.status.idle":"2024-07-23T05:13:25.708058Z","shell.execute_reply.started":"2024-07-23T05:13:25.695255Z","shell.execute_reply":"2024-07-23T05:13:25.706712Z"},"trusted":true},"execution_count":23,"outputs":[{"execution_count":23,"output_type":"execute_result","data":{"text/plain":"          Gender Vehicle_Age  Vehicle_Damage\nid                                          \n0              1    1-2 Year               1\n1              1   > 2 Years               1\n2              0    < 1 Year               0\n3              0    1-2 Year               1\n4              0    1-2 Year               0\n...          ...         ...             ...\n11504793       1    1-2 Year               1\n11504794       0    < 1 Year               1\n11504795       0    < 1 Year               0\n11504796       0    1-2 Year               1\n11504797       1    < 1 Year               0\n\n[11504798 rows x 3 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Gender</th>\n      <th>Vehicle_Age</th>\n      <th>Vehicle_Damage</th>\n    </tr>\n    <tr>\n      <th>id</th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>1-2 Year</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>&gt; 2 Years</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0</td>\n      <td>&lt; 1 Year</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>0</td>\n      <td>1-2 Year</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0</td>\n      <td>1-2 Year</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>11504793</th>\n      <td>1</td>\n      <td>1-2 Year</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>11504794</th>\n      <td>0</td>\n      <td>&lt; 1 Year</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>11504795</th>\n      <td>0</td>\n      <td>&lt; 1 Year</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>11504796</th>\n      <td>0</td>\n      <td>1-2 Year</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>11504797</th>\n      <td>1</td>\n      <td>&lt; 1 Year</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>11504798 rows × 3 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"sns.heatmap(train.select_dtypes(exclude='category').corr(),annot=True)","metadata":{"execution":{"iopub.status.busy":"2024-07-23T05:15:08.899982Z","iopub.execute_input":"2024-07-23T05:15:08.900692Z","iopub.status.idle":"2024-07-23T05:15:12.151753Z","shell.execute_reply.started":"2024-07-23T05:15:08.900661Z","shell.execute_reply":"2024-07-23T05:15:12.150651Z"},"trusted":true},"execution_count":32,"outputs":[{"execution_count":32,"output_type":"execute_result","data":{"text/plain":"<Axes: >"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 2 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"code","source":"df_cat = train.select_dtypes(\"category\")\ndf_cat_test = test.select_dtypes(\"category\")\ndf_cat['Gender']=pd.get_dummies(df_cat.Gender,drop_first=True,dtype=int)\ndf_cat_test['Gender']=pd.get_dummies(df_cat_test.Gender,drop_first=True,dtype=int)\ndf_cat['Vehicle_Damage']=pd.get_dummies(df_cat.Vehicle_Damage,drop_first=True,dtype=int)\ndf_cat_test['Vehicle_Damage']=pd.get_dummies(df_cat_test.Vehicle_Damage,drop_first=True,dtype=int)\ndf_cat.Vehicle_Age=df_cat.Vehicle_Age.map({'< 1 Year':0,'1-2 Year':1,'> 2 Years':2})\ndf_cat_test.Vehicle_Age=df_cat_test.Vehicle_Age.map({'< 1 Year':0,'1-2 Year':1,'> 2 Years':2})\ndf_train=train.copy()\ndf_train[df_cat.columns]=df_cat\ndf_test=test.copy()\ndf_test[df_cat_test.columns]=df_cat_test","metadata":{"execution":{"iopub.status.busy":"2024-07-23T05:15:24.694691Z","iopub.execute_input":"2024-07-23T05:15:24.695685Z","iopub.status.idle":"2024-07-23T05:15:26.142889Z","shell.execute_reply.started":"2024-07-23T05:15:24.695648Z","shell.execute_reply":"2024-07-23T05:15:26.141782Z"},"trusted":true},"execution_count":33,"outputs":[]},{"cell_type":"code","source":"scale=StandardScaler()\ndf_train_scaled=pd.DataFrame(scale.fit_transform(df_train.drop(['Response'],axis=1)),columns=df_test.columns)\ndf_test_scaled=pd.DataFrame(scale.transform(df_test),columns=df_test.columns)","metadata":{"execution":{"iopub.status.busy":"2024-07-23T05:15:27.093561Z","iopub.execute_input":"2024-07-23T05:15:27.093945Z","iopub.status.idle":"2024-07-23T05:15:31.141060Z","shell.execute_reply.started":"2024-07-23T05:15:27.093917Z","shell.execute_reply":"2024-07-23T05:15:31.140178Z"},"trusted":true},"execution_count":34,"outputs":[]},{"cell_type":"code","source":"# Create a BalancedBaggingClassifier\nbase_classifier = XGBClassifier(random_state=42)\n","metadata":{"execution":{"iopub.status.busy":"2024-07-23T05:15:53.278348Z","iopub.execute_input":"2024-07-23T05:15:53.278777Z","iopub.status.idle":"2024-07-23T05:15:53.283866Z","shell.execute_reply.started":"2024-07-23T05:15:53.278749Z","shell.execute_reply":"2024-07-23T05:15:53.282700Z"},"trusted":true},"execution_count":36,"outputs":[]},{"cell_type":"code","source":"split = StratifiedShuffleSplit(n_splits=1, test_size=0.2, random_state=42,)\n\nfor train_index, test_index in split.split(df_train_scaled, df_train.Response):\n    X_train, X_test = df_train_scaled.iloc[train_index], df_train_scaled.iloc[test_index]\n    y_train, y_test = df_train.Response.iloc[train_index], df_train.Response.iloc[test_index]\n    model = logreg = BalancedBaggingClassifier(base_classifier,\n                                                        sampling_strategy='auto',\n                                                        replacement=False,\n                                                        random_state=42)\n    model.fit(X_train, y_train)\n    y_pred = model.predict(X_test)\n    auc_score = roc_auc_score(y_test, y_pred)\n    print(f\"AUC Score: {auc_score}\")","metadata":{"execution":{"iopub.status.busy":"2024-07-23T05:15:54.137180Z","iopub.execute_input":"2024-07-23T05:15:54.138097Z","iopub.status.idle":"2024-07-23T05:19:18.551922Z","shell.execute_reply.started":"2024-07-23T05:15:54.138062Z","shell.execute_reply":"2024-07-23T05:19:18.550679Z"},"trusted":true},"execution_count":37,"outputs":[{"name":"stdout","text":"AUC Score: 0.8127613892283326\n","output_type":"stream"}]},{"cell_type":"code","source":"y_test.value_counts(normalize=True)","metadata":{"execution":{"iopub.status.busy":"2024-07-23T05:19:36.163620Z","iopub.execute_input":"2024-07-23T05:19:36.164622Z","iopub.status.idle":"2024-07-23T05:19:36.186745Z","shell.execute_reply.started":"2024-07-23T05:19:36.164587Z","shell.execute_reply":"2024-07-23T05:19:36.185707Z"},"trusted":true},"execution_count":38,"outputs":[{"execution_count":38,"output_type":"execute_result","data":{"text/plain":"Response\n0    0.877003\n1    0.122997\nName: proportion, dtype: float64"},"metadata":{}}]},{"cell_type":"code","source":"y_test=model.predict(df_test)","metadata":{"execution":{"iopub.status.busy":"2024-07-23T05:22:39.801366Z","iopub.execute_input":"2024-07-23T05:22:39.802399Z","iopub.status.idle":"2024-07-23T05:24:02.922972Z","shell.execute_reply.started":"2024-07-23T05:22:39.802352Z","shell.execute_reply":"2024-07-23T05:24:02.921818Z"},"trusted":true},"execution_count":43,"outputs":[]},{"cell_type":"code","source":"sample.Response=pd.DataFrame(y_test)\nsample.to_csv(\"submission.csv\", index=False)\nsample","metadata":{"execution":{"iopub.status.busy":"2024-07-23T05:24:37.188421Z","iopub.execute_input":"2024-07-23T05:24:37.188836Z","iopub.status.idle":"2024-07-23T05:24:43.760592Z","shell.execute_reply.started":"2024-07-23T05:24:37.188807Z","shell.execute_reply":"2024-07-23T05:24:43.759437Z"},"trusted":true},"execution_count":46,"outputs":[{"execution_count":46,"output_type":"execute_result","data":{"text/plain":"               id  Response\n0        11504798         0\n1        11504799         0\n2        11504800         0\n3        11504801         0\n4        11504802         0\n...           ...       ...\n7669861  19174659         0\n7669862  19174660         1\n7669863  19174661         0\n7669864  19174662         1\n7669865  19174663         1\n\n[7669866 rows x 2 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>Response</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>11504798</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>11504799</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>11504800</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>11504801</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>11504802</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>7669861</th>\n      <td>19174659</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>7669862</th>\n      <td>19174660</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>7669863</th>\n      <td>19174661</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>7669864</th>\n      <td>19174662</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>7669865</th>\n      <td>19174663</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n<p>7669866 rows × 2 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}